tablea <- data.frame()
tablea
edit(tablea)
tablea
tablea
clear
cls
tablea <- edit(tablea)
tablea
dim(tablea)
nrows(tablea)
nrow(tablea)
ncol(tablea)
class(tablea.var1)
cols(tablea)
colnames(tablea)
colnames(tablea) <- ['col1',col2]
colnames(tablea) <- c('col1',col2)
colnames(tablea) <- c('col1','col2')
colnames(tablea)
tablea
install.packages('devtools')
devtools::install_github('IRkernel/IRkernel')
devtools
clear
cls
c
install.packages('IRkernel')
library("IRkernel", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
install.packages('twitteR')
library(twitteR)
library(twitteR)
install.packages("twitteR")
library(devtools)
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtolls)
library(devtools)
library(devtools)
library(devtools)
install.packages(c("devtools", "rjson", "bit64", "httr"))
install.packages(c("devtools", "rjson", "bit64", "httr"),dependencies = TRUE)
library(devtools)
install.packages("rjson")
install.packages("bit64")
install.packages("httr")
install.packages("devtools")
library(devtools)
cleaer
installed.packages(.Library)
library(rpart)
clear
hist(c(1,2,3,4))
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:bit", unload=TRUE)
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtools)
library(devtools)
data()
attach(mpg)
mpg
data(mpg)
library(maps)
import.packages("maps")
install.packages("maps","ggmap","maptools")
install.packages("maps")
library(maps)
install.packages("ggmap")
install.packages("maptools")
mpg
data()
hist(c(-2,1,-3,4,-1,2,1,-5,4))
plot(seq(9),c(-2,1,-3,4,-1,2,1,-5,4))
library(tidyverse)
install.packages(tidyverse,TRUE)
install.packages('tidyverse'',TRUE)
install.packages('tidyverse'',TRUE)
install.packages('tidyverse'',TRUE)
install.packages('tidyverse'',TRUE)
clear
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse", dependencies = FALSE)
install.packages("rvest")
install.packages("xml2")
install.packages("tidyverse", dependencies = T)
library(tidyverse)
install.packages("ggmap")
#https://stackoverflow.com/questions/32090073/geom-bar-geom-line-with-different-y-axis-scale
#http://www.sthda.com/english/wiki/ggplot2-line-types-how-to-change-line-types-of-a-graph-in-r-software
#https://html-color-codes.info/colors-from-image/#
#https://stackoverflow.com/questions/46039176/ggplot2-adding-secondary-y-axis-with-different-breaks-and-labels
#https://stackoverflow.com/questions/14771546/remove-legend-title-in-ggplot
#http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements
#https://ggplot2.tidyverse.org/reference/element.html
#library(lemon)
chart1 <- ggplot() +
geom_bar(data = bar_data,mapping = aes(fill=variable, y=value, x=factor(Week)), position="stack", stat="identity", color = "black") +
theme(axis.text.x = element_text(angle=65)) +
scale_fill_manual(values = c("#FFFF33","#008033")) +
#ylim(c(0,14000)) +
geom_line(data = line_data,mapping = aes(color = variable, y=value*400, x=factor(Week), group = variable,linetype = variable, size = variable)) +
scale_y_continuous(sec.axis = sec_axis(~.*(1/400), name = "Percent positive", breaks = seq(0,35,5)),breaks = seq(0,14000, by = 2000),limits = c(0,14000)) +
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
#theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
scale_colour_manual(values = c("black","#FFAA33", "#66D533")) +
scale_size_manual(values = c(0.9,0.9,0.9)) +
#ylim(0,14000) +
xlab("Week") +
ylab(c("Number of positive specimens","Percent Positive")) +
theme(axis.title = element_text(face = "bold"),
axis.title.y.right = element_text(angle = 90, hjust = 0.5,face = "bold"),
axis.text = element_text(face = "bold"),
axis.line.x.top = element_line(size = 1),
axis.line.y = element_line(size = 1),
axis.ticks.x = element_blank(),
legend.title = element_blank() ,
legend.key.width = unit(1,"cm"),
legend.key.height = unit(0.5,"cm"),
legend.text = element_text(face = "bold",margin = margin(1.5,1.5,1.5,1.5,"mm")), #to add space between legend symbol and name
legend.key = element_rect(fill = "white"), #to make legend symbol background white
panel.background = element_rect(fill = "white", colour = NA))   #to make the chart background white
#https://stackoverflow.com/questions/32090073/geom-bar-geom-line-with-different-y-axis-scale
#http://www.sthda.com/english/wiki/ggplot2-line-types-how-to-change-line-types-of-a-graph-in-r-software
#https://html-color-codes.info/colors-from-image/#
#https://stackoverflow.com/questions/46039176/ggplot2-adding-secondary-y-axis-with-different-breaks-and-labels
#https://stackoverflow.com/questions/14771546/remove-legend-title-in-ggplot
#http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements
#https://ggplot2.tidyverse.org/reference/element.html
#library(lemon)
chart1 <- ggplot() +
geom_bar(data = bar_data,mapping = aes(fill=variable, y=value, x=factor(Week)), position="stack", stat="identity", color = "black") +
theme(axis.text.x = element_text(angle=65)) +
scale_fill_manual(values = c("#FFFF33","#008033")) +
#ylim(c(0,14000)) +
geom_line(data = line_data,mapping = aes(color = variable, y=value*400, x=factor(Week), group = variable,linetype = variable, size = variable)) +
scale_y_continuous(sec.axis = sec_axis(~.*(1/400), name = "Percent positive", breaks = seq(0,35,5)),breaks = seq(0,14000, by = 2000),limits = c(0,14000)) +
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
#theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
scale_colour_manual(values = c("black","#FFAA33", "#66D533")) +
scale_size_manual(values = c(0.9,0.9,0.9)) +
#ylim(0,14000) +
xlab("Week") +
ylab(c("Number of positive specimens","Percent Positive")) +
theme(axis.title = element_text(face = "bold"),
axis.title.y.right = element_text(angle = 90, hjust = 0.5,face = "bold"),
axis.text = element_text(face = "bold"),
axis.line.x.top = element_line(size = 1),
axis.line.y = element_line(size = 1),
axis.ticks.x = element_blank(),
legend.title = element_blank() ,
legend.key.width = unit(1,"cm"),
legend.key.height = unit(0.5,"cm"),
legend.text = element_text(face = "bold",margin = margin(1.5,1.5,1.5,1.5,"mm")), #to add space between legend symbol and name
legend.key = element_rect(fill = "white"), #to make legend symbol background white
panel.background = element_rect(fill = "white", colour = NA))   #to make the chart background white
#https://stackoverflow.com/questions/32090073/geom-bar-geom-line-with-different-y-axis-scale
#http://www.sthda.com/english/wiki/ggplot2-line-types-how-to-change-line-types-of-a-graph-in-r-software
#https://html-color-codes.info/colors-from-image/#
#https://stackoverflow.com/questions/46039176/ggplot2-adding-secondary-y-axis-with-different-breaks-and-labels
#https://stackoverflow.com/questions/14771546/remove-legend-title-in-ggplot
#http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements
#https://ggplot2.tidyverse.org/reference/element.html
#library(lemon)
chart1 <- ggplot() +
geom_bar(data = bar_data,mapping = aes(fill=variable, y=value, x=factor(Week)), position="stack", stat="identity", color = "black") +
theme(axis.text.x = element_text(angle=65)) +
scale_fill_manual(values = c("#FFFF33","#008033")) +
#ylim(c(0,14000)) +
geom_line(data = line_data,mapping = aes(color = variable, y=value*400, x=factor(Week), group = variable,linetype = variable, size = variable)) +
scale_y_continuous(sec.axis = sec_axis(~.*(1/400), name = "Percent positive", breaks = seq(0,35,5)),breaks = seq(0,14000, by = 2000),limits = c(0,14000)) +
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
#theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
scale_colour_manual(values = c("black","#FFAA33", "#66D533")) +
scale_size_manual(values = c(0.9,0.9,0.9)) +
#ylim(0,14000) +
xlab("Week") +
ylab(c("Number of positive specimens","Percent Positive")) +
theme(axis.title = element_text(face = "bold"),
axis.title.y.right = element_text(angle = 90, hjust = 0.5,face = "bold"),
axis.text = element_text(face = "bold"),
axis.line.x.top = element_line(size = 1),
axis.line.y = element_line(size = 1),
axis.ticks.x = element_blank(),
legend.title = element_blank() ,
legend.key.width = unit(1,"cm"),
legend.key.height = unit(0.5,"cm"),
legend.text = element_text(face = "bold",margin = margin(1.5,1.5,1.5,1.5,"mm")), #to add space between legend symbol and name
legend.key = element_rect(fill = "white"), #to make legend symbol background white
panel.background = element_rect(fill = "white", colour = NA))   #to make the chart background white
#https://stackoverflow.com/questions/32090073/geom-bar-geom-line-with-different-y-axis-scale
#http://www.sthda.com/english/wiki/ggplot2-line-types-how-to-change-line-types-of-a-graph-in-r-software
#https://html-color-codes.info/colors-from-image/#
#https://stackoverflow.com/questions/46039176/ggplot2-adding-secondary-y-axis-with-different-breaks-and-labels
#https://stackoverflow.com/questions/14771546/remove-legend-title-in-ggplot
#http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements
#https://ggplot2.tidyverse.org/reference/element.html
#library(lemon)
chart1 <- ggplot() +
geom_bar(data = bar_data,mapping = aes(fill=variable, y=value, x=factor(Week)), position="stack", stat="identity", color = "black") +
theme(axis.text.x = element_text(angle=65)) +
scale_fill_manual(values = c("#FFFF33","#008033")) +
#ylim(c(0,14000)) +
geom_line(data = line_data,mapping = aes(color = variable, y=value*400, x=factor(Week), group = variable,linetype = variable, size = variable)) +
scale_y_continuous(sec.axis = sec_axis(~.*(1/400), name = "Percent positive", breaks = seq(0,35,5)),breaks = seq(0,14000, by = 2000),limits = c(0,14000)) +
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
#theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
scale_colour_manual(values = c("black","#FFAA33", "#66D533")) +
scale_size_manual(values = c(0.9,0.9,0.9)) +
#ylim(0,14000) +
xlab("Week") +
ylab(c("Number of positive specimens","Percent Positive")) +
theme(axis.title = element_text(face = "bold"),
axis.title.y.right = element_text(angle = 90, hjust = 0.5,face = "bold"),
axis.text = element_text(face = "bold"),
axis.line.x.top = element_line(size = 1),
axis.line.y = element_line(size = 1),
axis.ticks.x = element_blank(),
legend.title = element_blank() ,
legend.key.width = unit(1,"cm"),
legend.key.height = unit(0.5,"cm"),
legend.text = element_text(face = "bold",margin = margin(1.5,1.5,1.5,1.5,"mm")), #to add space between legend symbol and name
legend.key = element_rect(fill = "white"), #to make legend symbol background white
panel.background = element_rect(fill = "white", colour = NA))   #to make the chart background white
setwd("~/git_workspace/DIC/PA1")
API_key <- "qbbabJxE8MlLrmtsNFmb8HZuI"
API_secret_key <- "LNrxtOmM9IjepyNvJgRLQDbTb2umK2zEcz1DyoyFBLzCF9Yev0"
Access_token <- "1038144228596039680-55CYAYC8HDAeyNInyx3W8sTMwcF8SY"
Access_token_secret <- "KJADO9al58jGnRmb6ktPUGDk8BchnWPXqMGG6pDmW9b0e"
#install.packages('rtweet')
library(rtweet)
create_token("IR Project 1 : Indexing",API_key,API_secret_key,Access_token,Access_token_secret)
usa <- lookup_coords("usa", "AIzaSyAZaXDX8K_WBKBRi8G0Dkw-bK2RWV_bSeI")
rt <- search_tweets("#flu", n = 18000, include_rts = FALSE, geocode = usa)
save_as_csv(rt, file_name = "flu_18k.csv", prepend_ids = TRUE, na = "", fileEncoding = "UTF-8")
View(unique(rt$location))
##ETL
flu1 <- read.csv('flu_18k.csv', header = T, stringsAsFactors = F)
locations <- flu1$location
temp1 <- as.vector(locations)
#https://stat545.com/block022_regular-expression.html
temp1 <- temp1[grepl(', [A-Z]{2}$',temp1)]
temp2 <- c() #appending to a list
for (i in temp1){
temp2<-c(temp2,strsplit(i, ',')[[1]][2])
}
temp2
tbl <- table(temp2)
population <- as.data.frame(tbl, stringsAsFactors = F)
population$temp2 <- trimws(population$temp2) #trimws works on entire column
View(population)
library(tidyverse)
library(usmap)
req_data <- merge(x = population, y = statepop, x.by = temp2, y.by = abbr, x.all = TRUE)
req_data <- filter(req_data, temp2 == abbr)
heatmap <- plot_usmap(data = req_data, values = "Freq", lines = "black") +
#scale_fill_manual(values = c( "#CC0000", "#D73800", "#E27100", "#EEAA00", "#F9E200", "#E2F800", "#AAEA00", "#71DD00", "#38CF00", "#00C200")) +
theme(legend.position = "right") +
labs(fill = "Population")
heatmap
View(population)
length(temp2)
dim(flu1)
rt <- search_tweets("#flu", n = 18000, include_rts = FALSE, geocode = usa)
dim(rt)
rt <- search_tweets("#flu", n = 17000, include_rts = FALSE, geocode = usa)
dim(rt)
save_as_csv(rt, file_name = "flu_18k.csv", prepend_ids = TRUE, na = "", fileEncoding = "UTF-8")
View(unique(rt$location))
##ETL
flu1 <- read.csv('flu_18k.csv', header = T, stringsAsFactors = F)
locations <- flu1$location
temp1 <- as.vector(locations)
#https://stat545.com/block022_regular-expression.html
temp1 <- temp1[grepl(', [A-Z]{2}$',temp1)]
temp2 <- c() #appending to a list
for (i in temp1){
temp2<-c(temp2,strsplit(i, ',')[[1]][2])
}
temp2
length(temp2)
rt <- search_tweets("#flu", n = 17000, include_rts = FALSE, geocode = usa, retryonratelimit = T)
dim(rt)
rt <- search_tweets("#flu", n = 50000, include_rts = FALSE, geocode = usa, retryonratelimit = T)
dim(rt)
names(rt)
head(rt$status_id)
max(rt$status_id)
class(rt$status_id)
rt$status_id <- as.numeric(rt$status_id)
max(rt$status_id)
m <- max(rt$status_id)
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T, max_id = m)
dim(rt)
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T, include_rts = F, type = "mixed")
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T, type = "mixed")
dim(rt)
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T)
dim(rt)
rt$status_id <- as.numeric(rt$status_id)
m <- max(rt$status_id)
dim(rt)[1]
min(as.numeric(rt$status_id))
as.integer(min(as.numeric(rt$status_id)))
min(as.numeric(rt$status_id))
m
min(as.numeric(rt$status_id))
m <- min(rt$status_id)
m
count = 0
m = NULL
while (count<2000){
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T, max_id = m)
count = count + dim(rt)[1]
m <- min(as.numeric(rt$status_id))
count
}
count + dim(rt)[1]
count
count = 0
m = NULL
while (count<200){
print(count)
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T, max_id = m)
count = count + dim(rt)[1]
m <- min(as.numeric(rt$status_id))
}
count = 0
m = NULL
while (count<2000){
print(count)
rt <- search_tweets("#flu", n = 2000, include_rts = FALSE, geocode = usa, retryonratelimit = T, max_id = m)
count = count + dim(rt)[1]
m <- min(as.numeric(rt$status_id))
}
